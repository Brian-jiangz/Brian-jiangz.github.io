<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小姜同学的博客</title>
  
  <subtitle>热衷海洋科学、人工智能、数学建模</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-13T07:32:14.111Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>姜正</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人简历</title>
    <link href="http://example.com/2021/09/13/resume-Jiang/"/>
    <id>http://example.com/2021/09/13/resume-Jiang/</id>
    <published>2021-09-13T05:35:02.000Z</published>
    <updated>2021-09-13T07:32:14.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Wode-Ni"><a href="#Wode-Ni" class="headerlink" title="Wode Ni"></a>Wode <strong>Ni</strong></h1><h2 id="Education"><a href="#Education" class="headerlink" title="Education"></a>Education</h2><h3 id="Carnegie-Mellon-University-2018-9"><a href="#Carnegie-Mellon-University-2018-9" class="headerlink" title="Carnegie Mellon University 2018.9 -"></a><strong>Carnegie Mellon University</strong> <code>2018.9 -</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pittsburgh, PA</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Wode-Ni&quot;&gt;&lt;a href=&quot;#Wode-Ni&quot; class=&quot;headerlink&quot; title=&quot;Wode Ni&quot;&gt;&lt;/a&gt;Wode &lt;strong&gt;Ni&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;Education&quot;&gt;&lt;a href=&quot;#Educati</summary>
      
    
    
    
    <category term="About Me" scheme="http://example.com/categories/About-Me/"/>
    
    
  </entry>
  
  <entry>
    <title>人工智能导论</title>
    <link href="http://example.com/2021/09/06/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA/"/>
    <id>http://example.com/2021/09/06/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA/</id>
    <published>2021-09-06T06:32:45.000Z</published>
    <updated>2021-09-13T08:10:10.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-队列搜索"><a href="#1-队列搜索" class="headerlink" title="1 队列搜索"></a>1 队列搜索</h1><h2 id="1-1-深度优先策略（DFC）"><a href="#1-1-深度优先策略（DFC）" class="headerlink" title="1.1 深度优先策略（DFC）"></a>1.1 深度优先策略（DFC）</h2><p>特点：</p><ol><li>在某个分支中运行到底；</li><li>判断结果是否符合要求；</li><li>回溯。</li></ol><p><strong>很难找到最优路径</strong></p><span id="more"></span><h3 id="1-1-1-问题"><a href="#1-1-1-问题" class="headerlink" title="1.1.1 问题"></a>1.1.1 问题</h3><p>进站的优先性如何选择？</p><h2 id="1-2-广度优先策略——队列"><a href="#1-2-广度优先策略——队列" class="headerlink" title="1.2 广度优先策略——队列"></a>1.2 广度优先策略——队列</h2><p>特点：</p><ol><li>先搜索某节点所有可能的下一节点——依次搜索、删除；</li><li>搜索完下一节点同等级的所有节点后进行下下等级节点——依次搜索、删除；</li></ol><p><strong>泛而不精</strong>：探索的点和路径更多。</p><h2 id="1-3-迷宫求解实例"><a href="#1-3-迷宫求解实例" class="headerlink" title="1.3 迷宫求解实例"></a>1.3 迷宫求解实例</h2><h3 id="1-3-1-搜索路径"><a href="#1-3-1-搜索路径" class="headerlink" title="1.3.1 搜索路径"></a>1.3.1 搜索路径</h3><p>存储的信息：父节点（parent）、当前节点（state）、子节点（action）、<em><strong>耗费（cost）</strong></em> 等；<br>每个节点路径耗费为1，</p><h1 id="2-站结构算法"><a href="#2-站结构算法" class="headerlink" title="2 站结构算法"></a>2 站结构算法</h1><p>使用帮助函数来帮助寻找最优路径；</p><h2 id="2-1-盲目搜索"><a href="#2-1-盲目搜索" class="headerlink" title="2.1 盲目搜索"></a>2.1 盲目搜索</h2><h2 id="2-2-启发式搜索（Informed-search）"><a href="#2-2-启发式搜索（Informed-search）" class="headerlink" title="2.2 启发式搜索（Informed search）"></a>2.2 启发式搜索（Informed search）</h2><p>使用问题相关的知识决定进站的优先度</p><h2 id="2-3-贪婪最佳优先搜索（Greedy-Best-first-Search）"><a href="#2-3-贪婪最佳优先搜索（Greedy-Best-first-Search）" class="headerlink" title="2.3 贪婪最佳优先搜索（Greedy Best-first Search）"></a>2.3 贪婪最佳优先搜索（Greedy Best-first Search）</h2><p>利用启发函数的估算值，每次搜索都选着扩展最靠近目的的节点，本质上是深度优先策略。<br>例如，由A到B，中间有中间节点C、D，估算C、D到B的曼哈顿距离（$x_c-x_b+y_c-y_b$），选择较小的子节点运行，若曼哈顿距离相同，概率选择或通过更远的子节点的曼哈顿距离来决定下一节点。该过程本质上避免了搜索算法，提高了运行效率。</p><h2 id="2-4-A-算法"><a href="#2-4-A-算法" class="headerlink" title="2.4 A*算法"></a>2.4 A*算法</h2><p>同时考虑曼哈顿距离(h(n))和耗费距离（g(n) = cost to search the node）</p><blockquote><p>参考指标（类似上章启发函数）= g(n)+h(n)</p></blockquote><p>每次搜索递进得到的下一节点的参考指标，都需要与之前的分叉路径点未选择的下一节的参考指标大小比较，若比之前节点更长，则选择之前的节点开始新的路径递进。<br>当A*算法满足以下条件时可以搜索到最优结果：</p><ol><li>h（n）不能过高的估计节点到目标点的开销（可接受性）；</li><li>对于第N个节点及其后继节点m，以及n到m的开销c，<strong>h(n)&lt;= h(n)+c</strong>（一致性），否则可能找不到最优解。</li></ol><h2 id="2-5-问题"><a href="#2-5-问题" class="headerlink" title="2.5 问题"></a>2.5 问题</h2><ol><li>启发函数？<br>——估算所有路径的长度，估算离目标最近的点。</li></ol><h1 id="3-对抗搜索（adversarial-search）"><a href="#3-对抗搜索（adversarial-search）" class="headerlink" title="3 对抗搜索（adversarial search）"></a>3 对抗搜索（adversarial search）</h1><p>难度大于队列搜索和站搜索，但本质还是搜索算法。参考AlphaGo下围棋。<br><strong>基础算法</strong>：Minimax算法，既求最小值，也求最大值，理论上是求解极值，正负号代表站在哪一方的角度上求解问题；<br>其中，Max（X）希望最大化得分；Min（O）希望最小化得分。</p><h2 id="3-1-Tic-Tac-Toe游戏"><a href="#3-1-Tic-Tac-Toe游戏" class="headerlink" title="3.1 Tic-Tac-Toe游戏"></a>3.1 Tic-Tac-Toe游戏</h2><ol><li>players：依次轮流，反复横跳，左右互搏，自己跟自己下棋；</li><li>Actions：求解某次行动后，下次所有可能的下一步；</li><li>Results：输出Action的结果；</li><li>Terminals：判断Results是否为最终状态；</li><li>Utilitys：状态得分（Minimax数值）</li></ol><p><strong>理性最优</strong>策略</p><h3 id="3-1-1-流程"><a href="#3-1-1-流程" class="headerlink" title="3.1.1 流程"></a>3.1.1 流程</h3><ol><li>求解下一步所有可能选择;</li><li>求解下一步所有可能选择的所有下一步选择；</li><li>直到计算得到所有可能选择的所有结果；</li><li>回溯到当前选择处，选择得分最大的下一步；</li><li>回到“1”步，继续该流程。</li></ol><h1 id="考核要求"><a href="#考核要求" class="headerlink" title="考核要求"></a>考核要求</h1><ol><li>必须有编程内容；</li><li>页面多于十页纸；</li></ol><h1 id="4-知识表达与推理"><a href="#4-知识表达与推理" class="headerlink" title="4 知识表达与推理"></a>4 知识表达与推理</h1><p>方式：快思考（机器学习）与慢思考（知识表达和推理），后者模拟较难，知识表达与推理属于慢思考，需要长期训练。</p><h2 id="4-1-基于知识的代理"><a href="#4-1-基于知识的代理" class="headerlink" title="4.1 基于知识的代理"></a>4.1 基于知识的代理</h2><p>基于内部知识表达进行推理的智能代理，例如根据给出的事实，逻辑推断结论。</p><ol><li>逻辑学——句子：用一种能表达知识的语言对真实世界进行表达和论断；</li><li>命题逻辑学——使用命题符号（变量）来表示世界上的事实：例如使用P、Q、R代表真实事件；<br>（1）逻辑连接（与、或、非、推断（implication）（-&gt;）、双向条件（bio- condition））；<br>（2）模型：对每个逻辑符号设置一个逻辑值，所有逻辑符号逻辑值构成的一种总和；<br>（3）知识库（KB）：基于知识的代理所知道的所有句子的集合<br>（4）蕴含关系：$$\alpha| = \beta$$在所有可能的模型中，如果句子$\alpha$为真，那么$\beta$也为真；<br>（5）推理（Inference）：如何判断KB和$\alpha$是否含有蕴含关系？<br>$$DOES\ KB|= \alpha \ ?$$<blockquote><p><strong>方法：模型检测（Model checking）——穷举法：检测所有可能的组合，逐一检验，当KB和R可能的组合里，符合要求的组合中存在KB为ture而R为false则没有蕴含关系；</strong></p></blockquote></li></ol><h2 id="4-2-知识工程"><a href="#4-2-知识工程" class="headerlink" title="4.2 知识工程"></a>4.2 知识工程</h2><p><strong>流程：</strong></p><ol><li>命题符号化——数学化；</li><li>添加所有可能组合到知识库中；</li><li>添加每个对象的所有的判断逻辑到知识库中——所有可能存在的过滤器；</li><li>输入初始条件，使用 Model Checking 求解蕴含关系</li></ol><h2 id="求解算法"><a href="#求解算法" class="headerlink" title="求解算法"></a>求解算法</h2><h3 id="推理规则"><a href="#推理规则" class="headerlink" title="推理规则"></a>推理规则</h3><ol><li>分离规则；</li><li>消除规则；</li><li>双重否定消除；</li><li>推断消除：$\alpha\rightarrow \beta$ 即 $\lnot \alpha v \beta $</li><li>双向条件消除：$\alpha \leftrightarrow \beta$ 即 $(\alpha \rightarrow\beta) \land (\beta \rightarrow \alpha ) $<h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-队列搜索&quot;&gt;&lt;a href=&quot;#1-队列搜索&quot; class=&quot;headerlink&quot; title=&quot;1 队列搜索&quot;&gt;&lt;/a&gt;1 队列搜索&lt;/h1&gt;&lt;h2 id=&quot;1-1-深度优先策略（DFC）&quot;&gt;&lt;a href=&quot;#1-1-深度优先策略（DFC）&quot; class=&quot;headerlink&quot; title=&quot;1.1 深度优先策略（DFC）&quot;&gt;&lt;/a&gt;1.1 深度优先策略（DFC）&lt;/h2&gt;&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在某个分支中运行到底；&lt;/li&gt;
&lt;li&gt;判断结果是否符合要求；&lt;/li&gt;
&lt;li&gt;回溯。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;很难找到最优路径&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="人工智能" scheme="http://example.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>人工智能基础作业</title>
    <link href="http://example.com/2021/09/05/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80%E4%BD%9C%E4%B8%9A/"/>
    <id>http://example.com/2021/09/05/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80%E4%BD%9C%E4%B8%9A/</id>
    <published>2021-09-05T03:24:33.000Z</published>
    <updated>2021-09-13T06:26:56.394Z</updated>
    
    <content type="html"><![CDATA[<h1 id="人工智能基础课程作业"><a href="#人工智能基础课程作业" class="headerlink" title="人工智能基础课程作业"></a>人工智能基础课程作业</h1><h1 id="1-Deep-learning-state-of-the-art-2020-–YouTube"><a href="#1-Deep-learning-state-of-the-art-2020-–YouTube" class="headerlink" title="1 Deep learning state of the art (2020)–YouTube"></a>1 Deep learning state of the art (2020)–YouTube</h1><h2 id="1-1-前言"><a href="#1-1-前言" class="headerlink" title="1.1 前言"></a>1.1 前言</h2><blockquote><p>“AI began with an ancident wish to forge the gods” <br>-Pamela McCorduck,Machines Who Think,1979 </p></blockquote><p>宇宙诞生自13.8亿年前，现代人类诞生于30万年前，人类文明诞生于1.2万年前，工业革命机械生产的出现，只占历史中的0.1%。</p><span id="more"></span><h2 id="1-2-深度学习的应用"><a href="#1-2-深度学习的应用" class="headerlink" title="1.2 深度学习的应用"></a>1.2 深度学习的应用</h2><p>深度学习在</p><ol><li>游戏世界：IBM在1997年、ALphaGo在2016年战胜了人类世界的围棋冠军；</li><li>Waymo、Tesla自动驾驶技术；</li><li>波士顿机器人的控制系统。</li></ol><h2 id="1-3-深度学习的历史"><a href="#1-3-深度学习的历史" class="headerlink" title="1.3 深度学习的历史"></a>1.3 深度学习的历史</h2><p><img src="/2021/09/05/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80%E4%BD%9C%E4%B8%9A/HistoryOfDeepLearing.png" alt="Figure 1" title="Figure 1"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;人工智能基础课程作业&quot;&gt;&lt;a href=&quot;#人工智能基础课程作业&quot; class=&quot;headerlink&quot; title=&quot;人工智能基础课程作业&quot;&gt;&lt;/a&gt;人工智能基础课程作业&lt;/h1&gt;&lt;h1 id=&quot;1-Deep-learning-state-of-the-art-2020-–YouTube&quot;&gt;&lt;a href=&quot;#1-Deep-learning-state-of-the-art-2020-–YouTube&quot; class=&quot;headerlink&quot; title=&quot;1 Deep learning state of the art (2020)–YouTube&quot;&gt;&lt;/a&gt;1 Deep learning state of the art (2020)–YouTube&lt;/h1&gt;&lt;h2 id=&quot;1-1-前言&quot;&gt;&lt;a href=&quot;#1-1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.1 前言&quot;&gt;&lt;/a&gt;1.1 前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;“AI began with an ancident wish to forge the gods” &lt;br&gt;-Pamela McCorduck,Machines Who Think,1979 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;宇宙诞生自13.8亿年前，现代人类诞生于30万年前，人类文明诞生于1.2万年前，工业革命机械生产的出现，只占历史中的0.1%。&lt;/p&gt;</summary>
    
    
    
    <category term="人工智能" scheme="http://example.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="作业" scheme="http://example.com/tags/%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>基于Hexo的个人博客操作说明</title>
    <link href="http://example.com/2021/09/04/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C%E8%AF%B4%E6%98%8E/"/>
    <id>http://example.com/2021/09/04/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C%E8%AF%B4%E6%98%8E/</id>
    <published>2021-09-04T04:45:44.000Z</published>
    <updated>2021-09-04T06:37:06.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-基本操作"><a href="#1-基本操作" class="headerlink" title="1 基本操作"></a>1 基本操作</h1><h2 id="1-1-创建新博客"><a href="#1-1-创建新博客" class="headerlink" title="1.1 创建新博客"></a>1.1 创建新博客</h2><p>在 Mac terminal 中输入以下代码建立以“文章名称”为名称的新博客。<br></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npx hexo new <span class="string">&#x27;文章名称&#x27;</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="1-2-路径设置"><a href="#1-2-路径设置" class="headerlink" title="1.2 路径设置"></a>1.2 路径设置</h2><ol><li>首先，在访达中打开Blog文件；<br></li><li>同时按住 option+command+c 获得Blog文件的路径；<br></li><li>将terminal的路径设置为Blog文件的路径<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> Blog文件路径</span><br></pre></td></tr></table></figure><h1 id="2-检查与更新"><a href="#2-检查与更新" class="headerlink" title="2 检查与更新"></a>2 检查与更新</h1><h2 id="2-1-检查与本地预览"><a href="#2-1-检查与本地预览" class="headerlink" title="2.1 检查与本地预览"></a>2.1 检查与本地预览</h2>在terminal中依次进行一下操作<br></li><li>清除本地缓存<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npx hexo clean</span><br></pre></td></tr></table></figure></li><li>生成静态网页<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npx hexo g</span><br></pre></td></tr></table></figure></li><li>本地预览<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npx hexo serve</span><br></pre></td></tr></table></figure></li><li>上传至Github<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npx hexo d</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-基本操作&quot;&gt;&lt;a href=&quot;#1-基本操作&quot; class=&quot;headerlink&quot; title=&quot;1 基本操作&quot;&gt;&lt;/a&gt;1 基本操作&lt;/h1&gt;&lt;h2 id=&quot;1-1-创建新博客&quot;&gt;&lt;a href=&quot;#1-1-创建新博客&quot; class=&quot;headerlink&quot; title=&quot;1.1 创建新博客&quot;&gt;&lt;/a&gt;1.1 创建新博客&lt;/h2&gt;&lt;p&gt;在 Mac terminal 中输入以下代码建立以“文章名称”为名称的新博客。&lt;br&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npx hexo new &lt;span class=&quot;string&quot;&gt;&amp;#x27;文章名称&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="写作" scheme="http://example.com/categories/%E5%86%99%E4%BD%9C/"/>
    
    
    <category term="博客" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="写作" scheme="http://example.com/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>人工智能基础课程</title>
    <link href="http://example.com/2021/09/02/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/"/>
    <id>http://example.com/2021/09/02/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/</id>
    <published>2021-09-02T11:41:46.000Z</published>
    <updated>2021-09-13T05:18:07.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-绪论"><a href="#1-绪论" class="headerlink" title="1 绪论"></a>1 绪论</h1><h2 id="1-1-人工智能发展史"><a href="#1-1-人工智能发展史" class="headerlink" title="1.1 人工智能发展史"></a>1.1 人工智能发展史</h2><ol><li>人工智能与日常生活：如自动驾驶、机器人等。</li><li>人工智能与机器学习：机器学习是AI的主要实现形式。</li><li>图灵测试：Turning Test：通过实验对象与机器或人交流，判断与其聊天的对象是机器还是人，当误判超过30%时，认为其为人工智能。</li><li>导航算法：$A^*$算法与可视化图法（the visibility graph method）</li><li>卷积网络优化算法——反向传播理论（BP算法），解决了神经网络高效率优化的问题。<span id="more"></span><h2 id="1-2-人工智能及其研究方法"><a href="#1-2-人工智能及其研究方法" class="headerlink" title="1.2 人工智能及其研究方法"></a>1.2 人工智能及其研究方法</h2></li><li>定义：参考Wiki的<a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD">人工智能定义</a>。</li><li>优势：大幅度减少众多应用场景的能耗比。</li><li>分类：<br>（1）通用人工智能、强人工智能——有自我意识；<br>（2）认知智能：模仿人。</li><li>派别：<br>（1）符号学派；<br>（2）联结学派：仿人脑神经元（LeNet）；<br>（3）行为学派：机器人——进化学派。</li><li>关键技术：机器学习、自然科学、计算机视觉、自助无人系统、多媒体、智能芯片技术。</li><li>Key point：<br>（1）算力<br>（2）算法<br>（3）算料</li></ol><h2 id="2-1-深度学习在语音处理中的研究方向和应用"><a href="#2-1-深度学习在语音处理中的研究方向和应用" class="headerlink" title="2.1 深度学习在语音处理中的研究方向和应用"></a>2.1 深度学习在语音处理中的研究方向和应用</h2><h3 id="2-1-1-研究方向"><a href="#2-1-1-研究方向" class="headerlink" title="2.1.1 研究方向"></a>2.1.1 研究方向</h3><p>分类、质量评测、增强、指纹识别、检索、唤醒、识别、合成与生成等。</p><h3 id="2-1-2-应用"><a href="#2-1-2-应用" class="headerlink" title="2.1.2 应用"></a>2.1.2 应用</h3><p>音乐测评、Auto speech enhancement（降噪、加强原声）、Text to speech（合成主播）、Wave synthesis（自主音乐制作）。</p><h3 id="2-1-3-常用算法（algorithm）"><a href="#2-1-3-常用算法（algorithm）" class="headerlink" title="2.1.3 常用算法（algorithm）"></a>2.1.3 常用算法（algorithm）</h3><p>Keyword spotting、ASR、speaker recognition等。</p><h2 id="2-2-深度学习在计算机视觉中的研究方向和应用"><a href="#2-2-深度学习在计算机视觉中的研究方向和应用" class="headerlink" title="2.2 深度学习在计算机视觉中的研究方向和应用"></a>2.2 深度学习在计算机视觉中的研究方向和应用</h2><h3 id="2-2-1-研究方向"><a href="#2-2-1-研究方向" class="headerlink" title="2.2.1 研究方向"></a>2.2.1 研究方向</h3><p>图像编辑、重建、生成、超分辨率、增强、去模糊、分类、分割、检测、识别、跟踪、图像质量分析、降噪与修复。</p><h3 id="2-2-2-应用"><a href="#2-2-2-应用" class="headerlink" title="2.2.2 应用"></a>2.2.2 应用</h3><p>Object segmentation（图像分割）、Object detection（目标检测）、目标识别及人脸识别、Object tracking（目标跟踪）、Image denosing、Neural-based style transfer and image translation（基于神经网络的图像风格化及图像翻译）、Image synthesis（生成原始数据集）、Scene reconstruction（基于二维图像重建三维图像——视觉Slame、VR虚拟现实）、face attribute edit等。</p><h2 id="2-3-自然语言处理"><a href="#2-3-自然语言处理" class="headerlink" title="2.3 自然语言处理"></a>2.3 自然语言处理</h2><h3 id="2-3-1-研究方向"><a href="#2-3-1-研究方向" class="headerlink" title="2.3.1 研究方向"></a>2.3.1 研究方向</h3><p>文本分类与聚类、文章标签和摘要提取、文本审核与舆情分析、机器翻译、阅读理解、聊天机器人、搜索引擎等。</p><h3 id="2-3-2-应用"><a href="#2-3-2-应用" class="headerlink" title="2.3.2 应用"></a>2.3.2 应用</h3><p>文本基本任务：预处理、向量化、分词、词性标注、文本结构化、Text classification、Abstract extraction。</p><h2 id="2-4-推荐系统"><a href="#2-4-推荐系统" class="headerlink" title="2.4 推荐系统"></a>2.4 推荐系统</h2><h3 id="2-4-1-推荐系统研究方向与应用"><a href="#2-4-1-推荐系统研究方向与应用" class="headerlink" title="2.4.1 推荐系统研究方向与应用"></a>2.4.1 推荐系统研究方向与应用</h3><p>个性化推荐等(商品、商家、短视频等)；</p><h3 id="2-4-2-重要性"><a href="#2-4-2-重要性" class="headerlink" title="2.4.2 重要性"></a>2.4.2 重要性</h3><p>对于用户：智能化程度低；</p><h3 id="2-4-3-用户画像"><a href="#2-4-3-用户画像" class="headerlink" title="2.4.3 用户画像"></a>2.4.3 用户画像</h3><p>根据用户信息侧写用户，并推荐其需求。</p><h3 id="2-4-4-个性化推荐"><a href="#2-4-4-个性化推荐" class="headerlink" title="2.4.4 个性化推荐"></a>2.4.4 个性化推荐</h3><ol><li>基于内容阅读，购买历史；</li><li>基于订阅、关注、社交关系链；</li><li>相关推荐，以物推物；</li><li>基于各种数据进行排行接单；</li><li>新闻推荐，流量等<br>……<h3 id="第二次作业"><a href="#第二次作业" class="headerlink" title="第二次作业"></a>第二次作业</h3>Python基础入门</li><li>python语言学习:Word+PPT；</li><li>IDE比较：Jupyter notebook,pycharm,vs code；</li></ol><h1 id="2-Python"><a href="#2-Python" class="headerlink" title="2 Python"></a>2 Python</h1><h2 id="2-2-Python基本概念"><a href="#2-2-Python基本概念" class="headerlink" title="2.2 Python基本概念"></a>2.2 Python基本概念</h2><h3 id="2-2-1-数据存储"><a href="#2-2-1-数据存储" class="headerlink" title="2.2.1 数据存储"></a>2.2.1 数据存储</h3><p>列表、数组、元组与字典等。</p><h3 id="2-2-2-变量"><a href="#2-2-2-变量" class="headerlink" title="2.2.2 变量"></a>2.2.2 变量</h3><p>变量赋值基本与MATLAB、R一致，不需声明、定义。<br><strong>大小写</strong>代表不同变量，即Std与std是两个变量。</p><h3 id="2-2-3-运算符和表达式"><a href="#2-2-3-运算符和表达式" class="headerlink" title="2.2.3 运算符和表达式"></a>2.2.3 运算符和表达式</h3><h3 id="2-2-4-函数"><a href="#2-2-4-函数" class="headerlink" title="2.2.4 函数"></a>2.2.4 函数</h3>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-绪论&quot;&gt;&lt;a href=&quot;#1-绪论&quot; class=&quot;headerlink&quot; title=&quot;1 绪论&quot;&gt;&lt;/a&gt;1 绪论&lt;/h1&gt;&lt;h2 id=&quot;1-1-人工智能发展史&quot;&gt;&lt;a href=&quot;#1-1-人工智能发展史&quot; class=&quot;headerlink&quot; title=&quot;1.1 人工智能发展史&quot;&gt;&lt;/a&gt;1.1 人工智能发展史&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;人工智能与日常生活：如自动驾驶、机器人等。&lt;/li&gt;
&lt;li&gt;人工智能与机器学习：机器学习是AI的主要实现形式。&lt;/li&gt;
&lt;li&gt;图灵测试：Turning Test：通过实验对象与机器或人交流，判断与其聊天的对象是机器还是人，当误判超过30%时，认为其为人工智能。&lt;/li&gt;
&lt;li&gt;导航算法：$A^*$算法与可视化图法（the visibility graph method）&lt;/li&gt;
&lt;li&gt;卷积网络优化算法——反向传播理论（BP算法），解决了神经网络高效率优化的问题。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="人工智能" scheme="http://example.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/09/02/hello-world/"/>
    <id>http://example.com/2021/09/02/hello-world/</id>
    <published>2021-09-02T07:40:37.639Z</published>
    <updated>2021-09-04T06:37:06.207Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
